/*
 * Copyright (c) 2018 Marcel Piestansky
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.marpies.ane.facebook.share {

	import com.marpies.ane.facebook.listeners.IAIRFacebookShareListener;

	import flash.events.IEventDispatcher;

	/**
	 * Interface providing Facebook sharing APIs.
	 */
	public interface IAIRFacebookShare extends IEventDispatcher {

		/**
		 * Opens up web dialog or native Facebook app to post link on user's timeline.
		 *
		 * @param contentURL URL to which the posted link redirects.
		 * @param postWithoutUI Set to <code>true</code> if the link should be posted immediately
		 *                      without dialog or Facebook app popping up. User must be logged in and
		 *                      your app must have been granted <code>publish_actions</code> permission.
		 * @param message Message that is added to the post when shared without UI. When shared using native
		 *                UI this message can be added by user manually.
		 * @param listener Object that will be notified about the sharing process result.
		 *
		 * @event shareResult com.marpies.ane.facebook.events.AIRFacebookShareEvent Dispatched when the result
		 *        of the sharing process is obtained.
		 *
		 * @see #canShareLink
		 * @see http://developers.facebook.com/docs/sharing/android#links
		 */
		function link( contentURL:String,
					   postWithoutUI:Boolean = false,
					   message:String = null,
					   listener:IAIRFacebookShareListener = null ):void;

		/**
		 * Opens up native Facebook app to post photo on user's timeline.
		 *
		 * <p>Note: Facebook app is required for this feature to work.</p>
		 *
		 * @param photo Object representing the photo to share. This parameter may be either <code>String</code>
		 *              (image URL - local or remote location) or <code>BitmapData</code>.
		 *              If image URL is specified then the image will be loaded before sharing which
		 *              might introduce a slight delay between user's interaction and UI response.
		 * @param isUserGenerated Specifies whether the photo was generated by the user or by the application.
		 * @param postWithoutUI Set to <code>true</code> if the photo should be posted immediately
		 *                      without Facebook app popping up. User must be logged in and your
		 *                      app must have been granted <code>publish_actions</code> permission.
		 * @param message Message that is added to the post when shared without UI. When shared using native
		 *                UI this message can be added by user manually.
		 * @param listener Object that will be notified about the sharing process result.
		 *
		 * @event shareResult com.marpies.ane.facebook.events.AIRFacebookShareEvent Dispatched when the result
		 *        of the sharing process is obtained.
		 *
		 * @see #canSharePhoto
		 * @see http://developers.facebook.com/docs/sharing/android#photos
		 */
		function photo( photo:Object,
						isUserGenerated:Boolean = false,
						postWithoutUI:Boolean = false,
						message:String = null,
						listener:IAIRFacebookShareListener = null ):void;

		/**
		 * Opens up native Facebook Messenger app to share link in message.
		 *
		 * <p>Note: Facebook Messenger app is required for this feature to work.
		 * Sharing via Messenger on iOS is only possible on iPhones.</p>
		 *
		 * <p>Note: On Android, successful result is dispatched even when user
		 * cancelled the share action. According to Facebook dev team, it is not considered a bug.</p>
		 *
		 * @param contentURL URL to which the posted link redirects.
		 * @param listener Object that will be notified about the sharing process result.
		 *
		 * @event shareResult com.marpies.ane.facebook.events.AIRFacebookShareEvent Dispatched when the result
		 *        of the sharing process is obtained.
		 *
		 * @see #canShareLinkMessage
		 */
		function linkMessage( contentURL:String,
							  listener:IAIRFacebookShareListener = null ):void;

		/**
		 * Opens up native Facebook Messenger app to share photo in message.
		 *
		 * <p>Note: Facebook Messenger app is required for this feature to work.
		 * Sharing via Messenger on iOS is only possible on iPhones.</p>
		 *
		 * <p>Note: On Android, successful result is dispatched even when user
		 * cancelled the share action. According to Facebook dev team, it is not considered a bug.</p>
		 *
		 * @param photo Object representing the photo to share. This parameter may be either <code>String</code>
		 *              (image URL - local or remote location) or <code>BitmapData</code>.
		 *              If image URL is specified then the image will be loaded before sharing which
		 *              might introduce a slight delay between user's interaction and UI response.
		 * @param isUserGenerated Specifies whether the photo was generated by the user or by the application.
		 * @param listener Object that will be notified about the sharing process result.
		 *
		 * @event shareResult com.marpies.ane.facebook.events.AIRFacebookShareEvent Dispatched when the result
		 *        of the sharing process is obtained.
		 *
		 * @see #canSharePhotoMessage
		 */
		function photoMessage( photo:Object, isUserGenerated:Boolean = false, listener:IAIRFacebookShareListener = null ):void;

		/**
		 * Opens up web dialog or native Facebook app to share an Open Graph story.
		 *
		 * @param actionType Open Graph action, e.g. <code>books.reads</code> or custom action <code>app_namespace:action</code>.
		 * @param objectType Open Graph object (must contain namespace), e.g. <code>books:book</code> or <code>app_namespace:object</code>.
		 * @param title Title of the Open Graph content.
		 * @param image Image displayed with the content. This parameter may be either <code>String</code> (image URL) or <code>BitmapData</code>.
		 * @param objectProperties Key-value object specifying additional Open Graph object properties.
		 *                         The keys must contain namespace, e.g. <code>{ "books:isbn", "0-553-57340-3", "app_namespace:property": "value" }</code>.
		 * @param listener Object that will be notified about the sharing process result.
		 *
		 * @event shareResult com.marpies.ane.facebook.events.AIRFacebookShareEvent Dispatched when the result
		 *        of the sharing process is obtained.
		 *
		 * @see #canShareOpenGraphStory
		 * @see http://developers.facebook.com/docs/sharing/opengraph
		 * @see http://developers.facebook.com/docs/games/opengraph
		 */
		function openGraphStory( actionType:String, objectType:String, title:String, image:Object = null, objectProperties:Object = null, listener:IAIRFacebookShareListener = null ):void;

		/**
		 * Call this to find out if link sharing is possible on current device.
		 *
		 * @see #link()
		 */
		function get canShareLink():Boolean;

		/**
		 * Call this to find out if photo sharing is possible on current device.
		 *
		 * @see #photo()
		 */
		function get canSharePhoto():Boolean;

		/**
		 * Call this to find out if link sharing with Messenger is possible on current device.
		 *
		 * <p>Note: Sharing via Messenger on iOS is only possible on iPhones.</p>
		 *
		 * @see #linkMessage()
		 */
		function get canShareLinkMessage():Boolean;

		/**
		 * Call this to find out if photo sharing with Messenger is possible on current device.
		 *
		 * <p>Note: Sharing via Messenger on iOS is only possible on iPhones.</p>
		 *
		 * @see #photoMessage()
		 */
		function get canSharePhotoMessage():Boolean;

		/**
		 * Call this to find out if Open Graph story sharing is possible on current device.
		 *
		 * @see #openGraphStory()
		 */
		function get canShareOpenGraphStory():Boolean;

	}

}
